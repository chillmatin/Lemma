#!/usr/bin/env python3
# coding: utf-8

# Copyright (C) 2017-present Robert Griesel
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>

import gi
gi.require_version('Gtk', '4.0')
from gi.repository import Gtk, GLib

import os.path

from lemma.infrastructure.service_locator import ServiceLocator
from lemma.ui.popovers.popover_manager import PopoverManager
from lemma.db.character_db import CharacterDB


class ToolsSidebar(Gtk.ScrolledWindow):

    def __init__(self):
        Gtk.ScrolledWindow.__init__(self)
        self.set_size_request(262, 280)

        self.resources_path = ServiceLocator.get_resources_path()

        self.box = Gtk.Box.new(Gtk.Orientation.VERTICAL, 0)
        self.box.add_css_class('tools-sidebar')

        self.add_headline('Math Typesetting', 'first')

        symbols = []
        symbols.append(['subscript', 'win.insert-xml(\'<placeholder marks="prev_selection"/><mathscript><mathlist><placeholder marks="new_selection_bound"/><end marks="new_insert"/></mathlist><mathlist></mathlist></mathscript>\')'])
        symbols.append(['superscript', 'win.insert-xml(\'<placeholder marks="prev_selection"/><mathscript><mathlist></mathlist><mathlist><placeholder marks="new_selection_bound"/><end marks="new_insert"/></mathlist></mathscript>\')'])
        symbols.append(['subsuperscript', 'win.insert-xml(\'<placeholder marks="prev_selection"/><mathscript><mathlist><placeholder marks="new_selection_bound"/><end marks="new_insert"/></mathlist><mathlist><placeholder/><end/></mathlist></mathscript>\')'])
        symbols.append(['fraction', 'win.insert-xml(\'<mathfraction><mathlist><placeholder marks="prev_selection new_selection_bound"/><end marks="new_insert"/></mathlist><mathlist><placeholder/><end/></mathlist></mathfraction>\')'])
        symbols.append(['sqrt', 'win.insert-xml(\'<mathroot><mathlist><placeholder marks="new_selection_bound prev_selection"/><end marks="new_insert"/></mathlist><mathlist></mathlist></mathroot>\')'])
        symbols.append(['nthroot', 'win.insert-xml(\'<mathroot><mathlist><placeholder marks="new_selection_bound prev_selection"/><end marks="new_insert"/></mathlist><mathlist><placeholder/><end/></mathlist></mathroot>\')'])
        self.add_flowbox(symbols)

        symbols = []
        symbols.append(['sumwithindex', 'win.insert-xml(\'‚àë<mathscript><mathlist><placeholder/>=<placeholder/><end/></mathlist><mathlist><placeholder/><end/></mathlist></mathscript>‚Äâ<placeholder marks="prev_selection"/>\')'])
        symbols.append(['prodwithindex', 'win.insert-xml(\'‚àè<mathscript><mathlist><placeholder/>=<placeholder/><end/></mathlist><mathlist><placeholder/><end/></mathlist></mathscript>‚Äâ<placeholder marks="prev_selection"/>\')'])
        symbols.append(['indefint', 'win.insert-xml(\'‚à´‚Äâ<placeholder marks="prev_selection"/>‚Äâùëë<placeholder/>\')'])
        symbols.append(['defint', 'win.insert-xml(\'‚à´<mathscript><mathlist><placeholder/><end/></mathlist><mathlist><placeholder/><end/></mathlist></mathscript>‚Äâ<placeholder marks="prev_selection"/>‚Äâùëë<placeholder/>\')'])
        self.add_flowbox_for_pictures(symbols)

        self.add_headline('Punctuation')
        symbols = []
        symbols.append(['textendash', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('textendash')])
        symbols.append(['textemdash', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('textemdash')])
        symbols.append(['guillemetleft', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('guillemetleft')])
        symbols.append(['guillemetright', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('guillemetright')])
        symbols.append(['quotedblbase', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('quotedblbase')])
        symbols.append(['textquotedblleft', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('textquotedblleft')])
        symbols.append(['textquotedblright', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('textquotedblright')])
        symbols.append(['cdotp', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('cdotp')])
        symbols.append(['colon', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('colon')])
        symbols.append(['vdots', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('vdots')])
        symbols.append(['cdots', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('cdots')])
        self.add_flowbox(symbols)

        self.add_headline('Greek Letters')
        symbols = []
        symbols.append(['alpha', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('alpha')])
        symbols.append(['beta', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('beta')])
        symbols.append(['gamma', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('gamma')])
        symbols.append(['delta', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('delta')])
        symbols.append(['epsilon', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('epsilon')])
        symbols.append(['zeta', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('zeta')])
        symbols.append(['eta', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('eta')])
        symbols.append(['theta', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('theta')])
        symbols.append(['vartheta', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('vartheta')])
        symbols.append(['iota', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('iota')])
        symbols.append(['kappa', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('kappa')])
        symbols.append(['lambda', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('lambda')])
        symbols.append(['mu', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mu')])
        symbols.append(['nu', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('nu')])
        symbols.append(['xi', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('xi')])
        symbols.append(['pi', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('pi')])
        symbols.append(['varpi', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('varpi')])
        symbols.append(['rho', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('rho')])
        symbols.append(['varrho', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('varrho')])
        symbols.append(['sigma', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('sigma')])
        symbols.append(['varsigma', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('varsigma')])
        symbols.append(['tau', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('tau')])
        symbols.append(['upsilon', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('upsilon')])
        symbols.append(['phi', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('phi')])
        symbols.append(['varphi', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('varphi')])
        symbols.append(['chi', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('chi')])
        symbols.append(['psi', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('psi')])
        symbols.append(['omega', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('omega')])
        symbols.append(['Gamma', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Gamma')])
        symbols.append(['Delta', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Delta')])
        symbols.append(['Theta', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Theta')])
        symbols.append(['Lambda', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Lambda')])
        symbols.append(['Xi', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Xi')])
        symbols.append(['Pi', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Pi')])
        symbols.append(['Sigma', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Sigma')])
        symbols.append(['Upsilon', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Upsilon')])
        symbols.append(['Phi', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Phi')])
        symbols.append(['Psi', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Psi')])
        symbols.append(['Omega', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Omega')])
        self.add_flowbox(symbols)

        self.add_headline('Misc. Symbols')
        symbols = []
        symbols.append(['neg', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('neg')])
        symbols.append(['infty', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('infty')])
        symbols.append(['prime', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('prime')])
        symbols.append(['backslash', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('backslash')])
        symbols.append(['emptyset', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('emptyset')])
        symbols.append(['forall', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('forall')])
        symbols.append(['exists', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('exists')])
        symbols.append(['nexists', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('nexists')])
        symbols.append(['complement', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('complement')])
        symbols.append(['bot', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('bot')])
        symbols.append(['top', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('top')])
        symbols.append(['partial', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('partial')])
        symbols.append(['nabla', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('nabla')])
        symbols.append(['mathbbN', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathbbN')])
        symbols.append(['mathbbZ', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathbbZ')])
        symbols.append(['mathbbQ', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathbbQ')])
        symbols.append(['mathbbI', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathbbI')])
        symbols.append(['mathbbR', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathbbR')])
        symbols.append(['mathbbC', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathbbC')])
        symbols.append(['Im', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Im')])
        symbols.append(['Re', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Re')])
        symbols.append(['aleph', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('aleph')])
        symbols.append(['wp', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('wp')])
        symbols.append(['hbar', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('hbar')])
        symbols.append(['imath', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('imath')])
        symbols.append(['jmath', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('jmath')])
        symbols.append(['ell', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('ell')])
        symbols.append(['sharp', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('sharp')])
        symbols.append(['flat', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('flat')])
        symbols.append(['natural', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('natural')])
        symbols.append(['angle', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('angle')])
        symbols.append(['sphericalangle', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('sphericalangle')])
        symbols.append(['measuredangle', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('measuredangle')])
        symbols.append(['clubsuit', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('clubsuit')])
        symbols.append(['diamondsuit', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('diamondsuit')])
        symbols.append(['heartsuit', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('heartsuit')])
        symbols.append(['spadesuit', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('spadesuit')])
        symbols.append(['eth', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('eth')])
        symbols.append(['mho', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mho')])
        self.add_flowbox(symbols)

        self.add_headline('Operators')
        symbols = []
        symbols.append(['pm', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('pm')])
        symbols.append(['mp', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mp')])
        symbols.append(['setminus', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('setminus')])
        symbols.append(['cdot', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('cdot')])
        symbols.append(['times', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('times')])
        symbols.append(['ast', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('ast')])
        symbols.append(['star', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('star')])
        symbols.append(['divideontimes', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('divideontimes')])
        symbols.append(['circ', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('circ')])
        symbols.append(['bullet', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('bullet')])
        symbols.append(['div', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('div')])
        symbols.append(['cap', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('cap')])
        symbols.append(['cup', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('cup')])
        symbols.append(['uplus', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('uplus')])
        symbols.append(['sqcap', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('sqcap')])
        symbols.append(['sqcup', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('sqcup')])
        symbols.append(['triangleleft', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('triangleleft')])
        symbols.append(['triangleright', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('triangleright')])
        symbols.append(['wr', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('wr')])
        symbols.append(['bigtriangleup', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('bigtriangleup')])
        symbols.append(['bigtriangledown', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('bigtriangledown')])
        symbols.append(['vee', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('vee')])
        symbols.append(['wedge', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('wedge')])
        symbols.append(['oplus', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('oplus')])
        symbols.append(['ominus', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('ominus')])
        symbols.append(['otimes', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('otimes')])
        symbols.append(['oslash', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('oslash')])
        symbols.append(['odot', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('odot')])
        symbols.append(['circledcirc', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('circledcirc')])
        symbols.append(['circleddash', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('circleddash')])
        symbols.append(['circledast', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('circledast')])
        symbols.append(['dotplus', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('dotplus')])
        symbols.append(['leftthreetimes', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('leftthreetimes')])
        symbols.append(['rightthreetimes', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('rightthreetimes')])
        symbols.append(['ltimes', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('ltimes')])
        symbols.append(['rtimes', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('rtimes')])
        symbols.append(['dagger', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('dagger')])
        symbols.append(['ddagger', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('ddagger')])
        symbols.append(['intercal', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('intercal')])
        symbols.append(['amalg', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('amalg')])
        self.add_flowbox(symbols)

        self.add_headline('Big Operators')
        symbols = []
        for name in ['sum', 'prod', 'coprod', 'int', 'iint', 'iiint', 'bigcap', 'bigcup', 'bigodot', 'bigoplus', 'bigotimes', 'bigwedge', 'bigvee']:
            symbols.append([name, 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name(name)])
        self.add_flowbox(symbols)

        self.symbols = list()

        self.relations_sym = []
        self.relations_sym.append(['leq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('leq')])
        self.relations_sym.append(['geq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('geq')])
        self.relations_sym.append(['lneq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('lneq')])
        self.relations_sym.append(['gneq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('gneq')])
        self.relations_sym.append(['nleq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('nleq')])
        self.relations_sym.append(['ngeq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('ngeq')])
        self.relations_sym.append(['nless', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('nless')])
        self.relations_sym.append(['ngtr', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('ngtr')])
        self.relations_sym.append(['ll', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('ll')])
        self.relations_sym.append(['gg', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('gg')])
        self.relations_sym.append(['neq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('neq')])
        self.relations_sym.append(['equiv', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('equiv')])
        self.relations_sym.append(['approx', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('approx')])
        self.relations_sym.append(['sim', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('sim')])
        self.relations_sym.append(['simeq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('simeq')])
        self.relations_sym.append(['cong', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('cong')])
        self.relations_sym.append(['ncong', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('ncong')])
        self.relations_sym.append(['asymp', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('asymp')])
        self.relations_sym.append(['prec', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('prec')])
        self.relations_sym.append(['succ', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('succ')])
        self.relations_sym.append(['nprec', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('nprec')])
        self.relations_sym.append(['nsucc', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('nsucc')])
        self.relations_sym.append(['preceq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('preceq')])
        self.relations_sym.append(['succeq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('succeq')])
        self.relations_sym.append(['subset', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('subset')])
        self.relations_sym.append(['supset', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('supset')])
        self.relations_sym.append(['subseteq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('subseteq')])
        self.relations_sym.append(['supseteq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('supseteq')])
        self.relations_sym.append(['subsetneq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('subsetneq')])
        self.relations_sym.append(['supsetneq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('supsetneq')])
        self.relations_sym.append(['nsubseteq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('nsubseteq')])
        self.relations_sym.append(['nsupseteq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('nsupseteq')])
        self.relations_sym.append(['sqsubset', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('sqsubset')])
        self.relations_sym.append(['sqsupset', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('sqsupset')])
        self.relations_sym.append(['sqsubseteq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('sqsubseteq')])
        self.relations_sym.append(['sqsupseteq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('sqsupseteq')])
        self.relations_sym.append(['bowtie', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('bowtie')])
        self.relations_sym.append(['in', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('in')])
        self.relations_sym.append(['notin', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('notin')])
        self.relations_sym.append(['propto', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('propto')])
        self.relations_sym.append(['vdash', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('vdash')])
        self.relations_sym.append(['dashv', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('dashv')])
        self.relations_sym.append(['models', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('models')])
        self.relations_sym.append(['smile', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('smile')])
        self.relations_sym.append(['frown', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('frown')])
        self.relations_sym.append(['between', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('between')])
        self.relations_sym.append(['perp', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('perp')])
        self.relations_sym.append(['mid', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mid')])
        self.relations_sym.append(['nmid', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('nmid')])
        self.relations_sym.append(['parallel', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('parallel')])
        self.relations_sym.append(['nparallel', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('nparallel')])
        self.relations_sym.append(['vartriangleleft', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('vartriangleleft')])
        self.relations_sym.append(['vartriangleright', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('vartriangleright')])
        self.relations_sym.append(['ntriangleleft', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('ntriangleleft')])
        self.relations_sym.append(['ntriangleright', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('ntriangleright')])
        self.relations_sym.append(['trianglelefteq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('trianglelefteq')])
        self.relations_sym.append(['trianglerighteq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('trianglerighteq')])
        self.relations_sym.append(['ntrianglelefteq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('ntrianglelefteq')])
        self.relations_sym.append(['ntrianglerighteq', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('ntrianglerighteq')])
        self.relations_sym.append(['multimap', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('multimap')])
        self.relations_sym.append(['pitchfork', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('pitchfork')])
        self.relations_sym.append(['therefore', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('therefore')])
        self.relations_sym.append(['because', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('because')])
        self.symbols.append({'id': 'relations', 'name': 'Relations', 'symbols': self.relations_sym})

        self.arrows_sym = []
        self.arrows_sym.append(['leftarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('leftarrow')])
        self.arrows_sym.append(['leftrightarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('leftrightarrow')])
        self.arrows_sym.append(['rightarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('rightarrow')])
        self.arrows_sym.append(['longleftarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('longleftarrow')])
        self.arrows_sym.append(['longleftrightarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('longleftrightarrow')])
        self.arrows_sym.append(['longrightarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('longrightarrow')])
        self.arrows_sym.append(['downarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('downarrow')])
        self.arrows_sym.append(['updownarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('updownarrow')])
        self.arrows_sym.append(['uparrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('uparrow')])
        self.arrows_sym.append(['Leftarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Leftarrow')])
        self.arrows_sym.append(['Leftrightarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Leftrightarrow')])
        self.arrows_sym.append(['Rightarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Rightarrow')])
        self.arrows_sym.append(['Longleftarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Longleftarrow')])
        self.arrows_sym.append(['Longleftrightarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Longleftrightarrow')])
        self.arrows_sym.append(['Longrightarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Longrightarrow')])
        self.arrows_sym.append(['Updownarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Updownarrow')])
        self.arrows_sym.append(['Uparrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Uparrow')])
        self.arrows_sym.append(['Downarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Downarrow')])
        self.arrows_sym.append(['mapsto', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mapsto')])
        self.arrows_sym.append(['longmapsto', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('longmapsto')])
        self.arrows_sym.append(['leftharpoondown', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('leftharpoondown')])
        self.arrows_sym.append(['rightharpoondown', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('rightharpoondown')])
        self.arrows_sym.append(['leftharpoonup', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('leftharpoonup')])
        self.arrows_sym.append(['rightharpoonup', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('rightharpoonup')])
        self.arrows_sym.append(['rightleftharpoons', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('rightleftharpoons')])
        self.arrows_sym.append(['leftrightharpoons', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('leftrightharpoons')])
        self.arrows_sym.append(['downharpoonleft', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('downharpoonleft')])
        self.arrows_sym.append(['upharpoonleft', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('upharpoonleft')])
        self.arrows_sym.append(['downharpoonright', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('downharpoonright')])
        self.arrows_sym.append(['upharpoonright', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('upharpoonright')])
        self.arrows_sym.append(['nwarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('nwarrow')])
        self.arrows_sym.append(['searrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('searrow')])
        self.arrows_sym.append(['nearrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('nearrow')])
        self.arrows_sym.append(['swarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('swarrow')])
        self.arrows_sym.append(['hookleftarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('hookleftarrow')])
        self.arrows_sym.append(['hookrightarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('hookrightarrow')])
        self.arrows_sym.append(['curvearrowleft', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('curvearrowleft')])
        self.arrows_sym.append(['curvearrowright', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('curvearrowright')])
        self.arrows_sym.append(['Lsh', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Lsh')])
        self.arrows_sym.append(['Rsh', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Rsh')])
        self.arrows_sym.append(['looparrowleft', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('looparrowleft')])
        self.arrows_sym.append(['looparrowright', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('looparrowright')])
        self.arrows_sym.append(['leftrightsquigarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('leftrightsquigarrow')])
        self.arrows_sym.append(['rightsquigarrow', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('rightsquigarrow')])
        self.symbols.append({'id': 'arrows', 'name': 'Arrows', 'symbols': self.arrows_sym})

        self.delimiters_sym = []
        self.delimiters_sym.append(['lparen', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('lparen')])
        self.delimiters_sym.append(['rparen', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('rparen')])
        self.delimiters_sym.append(['lbrack', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('lbrack')])
        self.delimiters_sym.append(['rbrack', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('rbrack')])
        self.delimiters_sym.append(['lbrace', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('lbrace')])
        self.delimiters_sym.append(['rbrace', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('rbrace')])
        self.delimiters_sym.append(['lfloor', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('lfloor')])
        self.delimiters_sym.append(['rfloor', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('rfloor')])
        self.delimiters_sym.append(['lceil', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('lceil')])
        self.delimiters_sym.append(['rceil', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('rceil')])
        self.delimiters_sym.append(['langle', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('langle')])
        self.delimiters_sym.append(['rangle', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('rangle')])
        self.delimiters_sym.append(['vert', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('vert')])
        self.delimiters_sym.append(['Vert', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('Vert')])
        self.symbols.append({'id': 'delimiters', 'name': 'Delimiters', 'symbols': self.delimiters_sym})

        self.mathcal_sym = []
        self.mathcal_sym.append(['mathcalA', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalA')])
        self.mathcal_sym.append(['mathcalB', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalB')])
        self.mathcal_sym.append(['mathcalC', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalC')])
        self.mathcal_sym.append(['mathcalD', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalD')])
        self.mathcal_sym.append(['mathcalE', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalE')])
        self.mathcal_sym.append(['mathcalF', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalF')])
        self.mathcal_sym.append(['mathcalG', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalG')])
        self.mathcal_sym.append(['mathcalH', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalH')])
        self.mathcal_sym.append(['mathcalI', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalI')])
        self.mathcal_sym.append(['mathcalJ', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalJ')])
        self.mathcal_sym.append(['mathcalK', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalK')])
        self.mathcal_sym.append(['mathcalL', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalL')])
        self.mathcal_sym.append(['mathcalM', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalM')])
        self.mathcal_sym.append(['mathcalN', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalN')])
        self.mathcal_sym.append(['mathcalO', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalO')])
        self.mathcal_sym.append(['mathcalP', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalP')])
        self.mathcal_sym.append(['mathcalQ', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalQ')])
        self.mathcal_sym.append(['mathcalR', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalR')])
        self.mathcal_sym.append(['mathcalS', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalS')])
        self.mathcal_sym.append(['mathcalT', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalT')])
        self.mathcal_sym.append(['mathcalU', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalU')])
        self.mathcal_sym.append(['mathcalV', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalV')])
        self.mathcal_sym.append(['mathcalW', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalW')])
        self.mathcal_sym.append(['mathcalX', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalX')])
        self.mathcal_sym.append(['mathcalY', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalY')])
        self.mathcal_sym.append(['mathcalZ', 'win.insert-xml::' + CharacterDB.get_unicode_from_latex_name('mathcalZ')])
        self.symbols.append({'id': 'mathcal', 'name': 'Calligraphic Capitals', 'symbols': self.mathcal_sym})

        for section in self.symbols:
            self.add_headline(section['name'], section['id'])
            self.add_flowbox(section['symbols'], section['id'])

        self.set_child(self.box)

    def add_headline(self, name, css_class=None):
        header = Gtk.Label.new(name)
        header.set_xalign(Gtk.Align.FILL)
        header.add_css_class('header')
        if css_class:
            header.add_css_class(css_class)
        self.box.append(header)

    def add_flowbox(self, symbols, css_class=None):
        flowbox = Gtk.FlowBox()
        flowbox.set_selection_mode(Gtk.SelectionMode.NONE)
        flowbox.set_can_focus(False)
        flowbox.set_max_children_per_line(20)
        if css_class:
            flowbox.add_css_class(css_class)
        for data in symbols:
            image = Gtk.Image.new_from_icon_name('sidebar-' + data[0] + '-symbolic')
            image.set_valign(Gtk.Align.CENTER)
            image.set_halign(Gtk.Align.CENTER)
            button = Gtk.Button()
            button.set_child(image)
            button.set_detailed_action_name(data[1])
            button.set_can_focus(False)
            button.add_css_class('flat')
            flowbox.append(button)
        self.box.append(flowbox)

    def add_flowbox_for_pictures(self, symbols, css_class=None):
        flowbox = Gtk.FlowBox()
        flowbox.set_selection_mode(Gtk.SelectionMode.NONE)
        flowbox.set_can_focus(False)
        flowbox.set_max_children_per_line(20)
        if css_class:
            flowbox.add_css_class(css_class)
        for data in symbols:
            pic = Gtk.Picture.new_for_filename(os.path.join(self.resources_path, 'icons_extra', 'sidebar-' + data[0] + '-symbolic.svg'))
            pic.set_valign(Gtk.Align.CENTER)
            pic.set_halign(Gtk.Align.CENTER)
            button = Gtk.Button()
            button.set_child(pic)
            button.set_detailed_action_name(data[1])
            button.set_can_focus(False)
            button.add_css_class('flat')
            flowbox.append(button)
        self.box.append(flowbox)


