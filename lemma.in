#!@python_path@
# coding: utf-8

# Copyright (C) 2017-present Robert Griesel
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>

import sys, os.path, gettext

from lemma.infrastructure.font_manager import FontManager
from lemma.infrastructure.service_locator import ServiceLocator
import lemma.workspace.workspace as workspace
import lemma.use_cases.use_cases as use_cases
import lemma.ui.application as application
import lemma.storage.storage as storage

# setup gettext
gettext.install('lemma', names=('ngettext',), localedir='@localedir_path@')

# get settings
settings = ServiceLocator.get_settings()

# init static variables
ServiceLocator.init_lemma_version('@lemma_version@')
ServiceLocator.init_resources_path('@resources_path@')

# setup fonts
font_path = os.path.join(ServiceLocator.get_resources_path(), 'fonts')
FontManager.add_font('book', os.path.join(font_path, 'newcomputermodern/otf/NewCM10-Book.otf'), 19.407, 21, 7, 0, 1)
FontManager.add_font('bold', os.path.join(font_path, 'newcomputermodern/otf/NewCM10-Bold.otf'), 19.407, 21, 7, 0, 1)
FontManager.add_font('bolditalic', os.path.join(font_path, 'newcomputermodern/otf/NewCM10-BoldItalic.otf'), 19.407, 21, 7, 0, 1)
FontManager.add_font('italic', os.path.join(font_path, 'newcomputermodern/otf/NewCM10-Italic.otf'), 19.407, 21, 7, 0, 1)
FontManager.add_font('math', os.path.join(font_path, 'newcomputermodern/otf/NewCMMath-Book.otf'), 19.407, 21, 7, 0, 1)
FontManager.add_font('math_small', os.path.join(font_path, 'newcomputermodern/otf/NewCMMath-Book.otf'), 14, 12, 2, 0, 0)
FontManager.add_font('teaser', os.path.join(font_path, 'newcomputermodern/otf/NewCM08-Book.otf'), 14, 16, 4, 0, 0)
FontManager.add_font('h1', os.path.join(font_path, 'newcomputermodern/otf/NewCMSans10-Bold.otf'), 32, 38, 11, 4, 4)
FontManager.add_font('h2', os.path.join(font_path, 'newcomputermodern/otf/NewCMSans10-Bold.otf'), 28, 33, 11, 4, 3)
FontManager.add_font('h3', os.path.join(font_path, 'newcomputermodern/otf/NewCMSans10-Bold.otf'), 24, 27, 8, 3, 2)
FontManager.add_font('h4', os.path.join(font_path, 'newcomputermodern/otf/NewCMSans10-Book.otf'), 24, 27, 8, 3, 2)
FontManager.add_font('h5', os.path.join(font_path, 'newcomputermodern/otf/NewCMSans10-BookOblique.otf'), 24, 27, 8, 3, 2)
FontManager.add_font('h6', os.path.join(font_path, 'newcomputermodern/otf/NewCMSans10-Book.otf'), 19.407, 21, 7, 0, 1)

# setup folder for user themes
pathname = ServiceLocator.get_user_themes_folder()
if not os.path.exists(pathname): os.mkdir(pathname)

workspace = workspace.Workspace()
ServiceLocator.set_workspace(workspace)

use_cases = use_cases.UseCases(workspace)

storage = storage.Storage(workspace)
storage.populate_documents()
storage.populate_workspace()
storage.init_writer()

view = application.Application(workspace, use_cases)
view.run(sys.argv)
